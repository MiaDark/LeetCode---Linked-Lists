/*Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode brz = head;
        ListNode baven = head;

  while(brz != null){
    brz = brz.next;
    if(brz != null){
      brz = brz.next;
      baven = baven.next;
    }
  }
  return baven;
    }
}
